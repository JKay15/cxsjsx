DEVLOG文件是按时间顺序的开发流程


action文件定义了四个函数，包括 Damage，Die，Cast 和 Resurrect。
Damage 函数接受三个参数：一个游戏对象，一个伤害量和一个可选的伤害来源。这个函数会调用游戏对象的 onDamage 方法，并减少游戏对象的生命值。如果游戏对象的生命值降为零，则调用 Die 函数。
Die 函数接受两个参数：一个游戏对象和一个可选的杀手。这个函数会创建一个 Death 对象，并根据游戏对象是否具有 MOBILE 标签执行不同的操作。如果游戏对象具有 MOBILE 标签，则会在游戏中生成骨头特效和尸体，并增加游戏中的灵魂数量。最后，这个函数会调用游戏对象的 onDeath 方法，并将其从游戏中移除。
Cast 函数会根据当前选择的法术进行施法。它会减少法术的剩余施法次数，并更改玩家角色的精灵图像。然后，它会根据法术的基础威力、目标角度和每轮发射数量生成多个投射物。最后，它会调用游戏的 onCast 方法。
Resurrect 函数会复活所有尸体。它首先检查能力是否处于冷却状态。如果不处于冷却状态，则重置能力计时器，并调用所有仪式对象的 onResurrect 方法。然后，它会遍历所有尸体对象，将其从游戏中移除，并在其位置生成一个骷髅单位。最后，它会调用所有仪式对象的 onResurrection 方法。


那个objects文件可以先不用看，全是独立的角色设计

engine文件是管画面绘制的，可以先不用管

fx.json文件定义了一些用于生成粒子效果的函数，包括 bones，trail，cloud，royalty，dust, 和 resurrect.
bones: 这个函数创建一个新的粒子发射器，并设置一些属性。它的持续时间为10秒到15秒，摩擦系数为0.6，速度为5到25，角度为90度左右，弹性为0.1到0.6，质量为60，并且具有三种不同的骨头精灵图像。
trail: 这个函数创建一个新的粒子发射器，并设置一些属性。它的持续时间为0.5秒到1.5秒，速度为1到11，角度为180度左右，弹性为0，发射频率为2，质量为3，并且具有三种不同的绿色精灵图像。
cloud: 这个函数接受一个矩形区域和一组精灵图像作为参数，并创建一个新的粒子发射器。它将发射器的位置和大小设置为指定的矩形区域，并设置一些其他属性。它的持续时间为0.5秒到1.5秒，速度为1到11，角度为90度左右，弹性为0，发射频率为2，质量为-2，并且具有指定的精灵图像。
royalty: 这个函数创建一个新的粒子发射器，并扩展 trail 函数返回的粒子发射器。它将发射频率设置为0.5，并将精灵图像设置为三种不同的星星图像。
dust: 这个函数创建一个新的粒子发射器，并设置一些属性。它将发射器的位置和大小设置为整个游戏舞台，并设置一些其他属性。它的角度范围是360度，持续时间为5秒到15秒，速度为1到4，弹性为0，发射频率为0.1，并且具有两种不同的灰尘精灵图像。
resurrect: 这个函数接受一个游戏对象作为参数，并创建一个新的粒子发射器。它扩展了 cloud 函数返回的粒子发射器，并将其位置和大小设置为指定游戏对象的边界。它还将发射频率设置为0，并将精灵图像设置为三种不同的绿色图像。
